<?php
/** @var \Mirasvit\GdprCookie\Block\CookieBar $block */
$isShowDeclineButton = $block->isShowDeclineButton();
?>
<div class="mst-gdpr__cookie-bar-wrapper" id="gdprCookieBar" x-data="initMstGdprCookieBar()" x-init="initDisplay()">
    <div class="mst-gdpr__cookie-bar">
        <div class="consent-text">
            <?= $block->getPolicyText() ?>
        </div>

        <div class="mst-gdpr__buttons">
            <button type="button" class="action" data-trigger-settings="trigger">
                <span><?= __('Settings') ?></span>
            </button>

            <button class="action primary" data-trigger-settings="agree"><?= __('Agree All') ?></button>
            <?php if ($isShowDeclineButton): ?>
                <button class="action" data-trigger-settings="decline"><?= __('Decline') ?></button>
            <?php endif; ?>
        </div>
    </div>
</div>
<div class="mst-gdpr__cookie-bar-overlay" id="gdprCookieBarOverlay"></div>
<script>
    function initMstGdprCookieBar() {
        'use strict';
        const cookieGroupName = '<?= \Mirasvit\GdprCookie\Model\ConfigProvider::MST_COOKIE_GROUPS ?>';
        const consentCookieName = '<?= \Mirasvit\GdprCookie\Model\ConfigProvider::CONSENT_COOKIE_NAME ?>'
        <?php $isOverlayEnabled = $block->getJsonConfig()['*']['Mirasvit_GdprCookie/js/cookieBar']['lockScreen'] ?? false ?>

        return {
            isLoading: false,
            isBarVisible: false,
            isScreenLocked: false,
            initDisplay: function () {
                !hyva.getCookie(cookieGroupName) || !hyva.getCookie(consentCookieName)
                    ? this.show()
                    : this.hide();
                window.addEventListener('mst-gdpr-cookie-settings-save', () => {
                    this.handleAllow();
                })
            },
            show: function () {
                this.isBarVisible = true;
                this.isScreenLocked = window.location.href.indexOf('cookie') === -1 && <?= (int) $isOverlayEnabled ?>;
                if (this.isScreenLocked) {
                    document.querySelector('body').style.overflow = 'hidden';
                }
            },
            hide: function () {
                this.isBarVisible = false;
                this.isScreenLocked = false;
                document.querySelector('body').style.overflow = 'auto';
            },
            handleAllow: function (agreeAll) {
                this.isLoading = true;

                let checkedGroups = [];
                if (agreeAll) {
                    checkedGroups = document.querySelectorAll('.cookie-group-container .checkbox');
                } else {
                    checkedGroups = document.querySelectorAll('.cookie-group-container .checkbox:checked');
                }

                const checked = Array.from(checkedGroups || []);
                const body = checked.reduce((body, item) => {
                    body.append('group_ids[]', item.dataset.groupId);
                    return body;
                }, new URLSearchParams({form_key: hyva.getFormKey()}))

                fetch('<?= $block->getUrl('gdpr_cookie/cookie/allow') ?>', {
                    method: 'post',
                    body: body,
                    headers: {contentType: 'application/x-www-form-urlencoded; charset=UTF-8'}
                })
                    .then(() => this.hide())
                    .finally(() => this.isLoading = false)
            },

            handleDecline: function () {
                this.isLoading = true;

                const body = new URLSearchParams({form_key: hyva.getFormKey()});
                fetch('<?= $block->getUrl('gdpr_cookie/cookie/decline') ?>', {
                    method: 'post',
                    body: body,
                    headers: {contentType: 'application/x-www-form-urlencoded; charset=UTF-8'}
                })
                    .then(() => this.hide())
                    .finally(() => this.isLoading = false)
            },

            openSettings: function () {
                window.dispatchEvent(new CustomEvent('mst-gdpr-cookie-settings-open'));
            }
        };
    }
</script>

